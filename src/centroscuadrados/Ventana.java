package centroscuadrados;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author victo
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        
        // Inicializar programa
        this.setLocationRelativeTo(null);
        this.btlDataBase.setModel(modeloTabla);
    }
    
    // Borrar los datos de la tabla
    private void fncVaciarTabla(){  
        int filas = modeloTabla.getRowCount();
        for(; filas > 0; filas--){
            modeloTabla.removeRow(filas - 1);
        }
    }

    // Borrar los datos del formulario
    private void fncResetFrontend(){
        txtfCantidad.setText("");
        txtfSemilla.setText("");
    }
    
    // Borrar los datos de las variables
    private void fncResetBackend(){
        this.tblCentros = 0;
        this.tblCuadrado = 0;
        this.tblSemilla = 0;
    }
   
    // Restricciones
    // Verificar que el campo semilla sean de 4 digitos
    // Verificar que el campo cantidad sean solamente digitos
    private boolean fncValidarDigitos(JTextField campo, int cantidadDig){
        int intCantidadDigitos = 0;
        int tamahno = campo.getText().length();
        
        for(int item = 0; item < tamahno; item++){
            char charC = campo.getText().charAt(item);
            if( (charC >= '0' && charC <= '9') ){
                intCantidadDigitos++;
            }
        }

        if(intCantidadDigitos == cantidadDig && campo.getText().length() == cantidadDig){
            return true;
        } else {
            return false;
        }        
    }
    
    // La funcionalidad del programa
    private void fncCentrosCuadrados(){
        
        // Si en la tabla ya tiene registros,
        // borramos todo, para agregar nuevos registros
        if( this.ProgramaInicializada ){
            this.fncVaciarTabla();
            this.ProgramaInicializada = false;
        }
        
        int cantidad = Integer.parseInt(txtfCantidad.getText());
        this.tblSemilla = Integer.parseInt(txtfSemilla.getText());

        for(int item = 0; item < cantidad; item++ ){
            
            // Agregar una nueva fila a la tabla            
            modeloTabla.setNumRows( modeloTabla.getRowCount() + 1);  
            
            // Registrar la semilla
            modeloTabla.setValueAt(this.tblSemilla, item , 0);
            
            // Calcular la semilla al cuadrado
            int Resultado = (int) Math.pow(this.tblSemilla , 2);
                            
            // Registrar la semilla al cuadrado
            modeloTabla.setValueAt( Resultado, item , 1);
            
            // Si la semilla al cuadro es menor de 6 digitos entonces se acaba el programa
            if( String.valueOf(Resultado).length() <= 6  ){
                JOptionPane.showMessageDialog(null, "El programa llego a su fin, la semilla al cuadro es menor de 6 digitos."
                        + "\nCon un total de " + item + " resultados.");
                break;
            }
            
                // Obtener los centros
            String valor = fncObtenerCentros( String.valueOf(Resultado) ); // En forma de String
            this.tblCentros =  Integer.parseInt(valor); // En forma de enteros
            
            // Registrar los centros
            modeloTabla.setValueAt( valor, item , 2);
            
            // Lo centros se convierten en se milla
            this.tblSemilla = this.tblCentros;
            
            // El ciclo se repite...
        }
        
    }
    
    // Obtener los 4 digitos del centro
    private String fncObtenerCentros(String raiz ){
        int tamanho = raiz.length();
        
        if( (tamanho % 2) > 0 ){
            raiz = '0' + raiz; 
        }
        
        return raiz.substring(2,6);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtfSemilla = new javax.swing.JTextField();
        txtfCantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        btlDataBase = new javax.swing.JTable();
        btnReset = new javax.swing.JButton();
        btnIniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Centros Cuadrados");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Semilla");

        jLabel2.setText("Cantidad");

        btlDataBase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(btlDataBase);

        btnReset.setBackground(new java.awt.Color(255, 51, 51));
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnIniciar.setBackground(new java.awt.Color(0, 204, 0));
        btnIniciar.setForeground(new java.awt.Color(255, 255, 255));
        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtfSemilla)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(txtfCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIniciar)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        this.fncResetBackend();
        this.fncResetFrontend();
        this.fncVaciarTabla();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        
        // Verificar restrincciones
        if( !(txtfSemilla.getText().length() > 0 && txtfCantidad.getText().length() > 0) ){ 
        
            JOptionPane.showMessageDialog(null, "Los campos no pueden estar vacias !!"); 
        
        }else if( this.fncValidarDigitos(this.txtfSemilla, 4) == false ){
            
            JOptionPane.showMessageDialog(null, "El campo semilla tiene que tener 4 digitos,"
                    + "\nsin letras y simbolos !!"); 
            
        }else if( this.fncValidarDigitos(this.txtfCantidad, this.txtfCantidad.getText().length() ) == false ){
            
            JOptionPane.showMessageDialog(null, "El campo cantidad tiene que ser sin letras y simbolos !!"); 
        
        }else if( Integer.parseInt(txtfCantidad.getText()) == 0 ){
            
            JOptionPane.showMessageDialog(null, "El campo cantidad tiene que ser mayor a 0 !!"); 
        
        }else{

            // Iniciar el programa
            this.fncCentrosCuadrados();
            
            this.fncResetBackend();
            this.fncResetFrontend();
            this.ProgramaInicializada = true;
            
        }
        
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        modeloTabla.addColumn("Semilla"); // 0
        modeloTabla.addColumn("Al cuadrado"); // 1
        modeloTabla.addColumn("Centros"); // 2
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    
    // Atributos para el frontend
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable btlDataBase;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtfCantidad;
    private javax.swing.JTextField txtfSemilla;
    // End of variables declaration//GEN-END:variables
    
    // Atributos para el backend
    DefaultTableModel modeloTabla = new DefaultTableModel();
    int tblSemilla = 0, tblCuadrado = 0, tblCentros = 0;
    boolean ProgramaInicializada = false;
    
}
